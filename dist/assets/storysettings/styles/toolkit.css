@charset "UTF-8";
html {
  font-size: 106.25%; }

body {
  margin: 0;
  padding: 0;
  line-height: 1.58824; }

/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.align--center {
  text-align: center; }

.align--left {
  text-align: left; }

.align--right {
  text-align: right; }

.align--justify {
  text-align: justify; }

.clearfix:before, .clearfix:after {
  content: ' ';
  display: table; }

.clearfix:after {
  clear: both; }

.intrinsic, .media--video-embed {
  /*
    This element must maintain position: relative.
    The padding-bottom creates the proper ratio.
    Examples:
        4:3 = padding-bottom: 75%;
        16:9 = padding-bottom: 56.25%;
        (does not necessarily have to be "common ratios",
        it can be based off image dimensions of the design)
   */
  height: 0;
  /*padding-bottom: 75%; // if this is a global class, you do not want to define this property. Do it in another class, example .ratio--4x3 */
  position: relative; }

.intrinsic__element, .media--video-embed iframe,
.media--video-embed video {
  /*
    This class needs no further customization,
    if this class is applied to the elemtent and is contained
    within .intrinsic > .intrinsic__wrapper > *current element*
    the element should scale in correct perspective
   */
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%; }

.position--vert-center {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%); }

.ratio--16x9, .media--video-embed {
  padding-bottom: 56.25%; }

::-moz-selection {
  background-color: #ffffbf; }

::selection {
  background-color: #ffffbf; }

body {
  background-color: #fff;
  color: #252525;
  font-family: "Merriweather", Georgia, "Times New Roman", serif;
  -webkit-font-kerning: normal;
          font-kerning: normal;
  -webkit-font-variant-ligatures: common-ligatures;
          font-variant-ligatures: common-ligatures;
  font-weight: 300;
  margin: auto;
  overflow-x: hidden;
  padding: 0; }

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  font-family: "Merriweather", Georgia, "Times New Roman", serif;
  font-weight: 900;
  margin-top: 0;
  padding-bottom: 0;
  padding-top: 0;
  text-rendering: optimizeLegibility; }
  h1 a:link,
  .h1 a:link,
  h2 a:link,
  .h2 a:link,
  h3 a:link,
  .h3 a:link,
  h4 a:link,
  .h4 a:link,
  h5 a:link,
  .h5 a:link,
  h6 a:link,
  .h6 a:link {
    font-weight: 900;
    text-decoration: none; }

h1,
.h1 {
  font-size: 1.95312em;
  line-height: 1.08424;
  margin-bottom: 0.27106em; }
  @media (min-width: 740px) {
    h1,
    .h1 {
      font-size: 3.05176em;
      line-height: 1.21434;
      margin-bottom: 0.17348em; } }

h2,
.h2 {
  font-size: 1.5625em;
  line-height: 1.35529;
  margin-bottom: 0.33882em; }

h3,
.h3 {
  font-size: 1.25em;
  line-height: 1.27059;
  margin-bottom: 0.42353em; }

h4,
.h4 {
  font-size: 1em;
  line-height: 1.58824;
  margin-bottom: 0.52941em; }

h5,
.h5,
h6,
.h6 {
  font-size: 0.8em;
  line-height: 1.32353;
  margin-bottom: 0.66176em; }

a,
a:link {
  color: #74add1;
  text-decoration: none; }

a:visited {
  color: #74add1; }

a:hover {
  color: #74add1;
  text-decoration: underline; }

a:active {
  color: #2b6081; }

p {
  margin-bottom: 1.05882em;
  margin-top: 0;
  padding-bottom: 0;
  padding-top: 0; }

small,
.font-small {
  font-size: 0.8em; }

em {
  font-style: italic; }

strong {
  font-weight: bold; }

figure {
  margin: 0;
  position: relative; }

figcaption {
  font-size: 0.8em;
  line-height: 1.32353;
  color: #737373;
  font-family: "Arimo", Arial, sans-serif;
  font-weight: 400;
  margin-top: 9px; }

blockquote {
  font-family: "Merriweather", Georgia, "Times New Roman", serif;
  margin-bottom: 3.17647em;
  margin-left: 0;
  margin-right: 0;
  margin-top: 3.17647em;
  padding-bottom: 0;
  text-align: center; }
  blockquote p {
    font-size: 1.5625em;
    line-height: 1.35529;
    font-weight: 900;
    margin-bottom: 0; }
  blockquote cite {
    font-size: 0.8em;
    line-height: 1.32353;
    color: #737373;
    display: block;
    font-family: "Arimo", Arial, sans-serif;
    font-style: normal;
    font-weight: 400;
    margin-top: 0.66176em;
    padding-left: 18px;
    padding-right: 18px; }

q {
  quotes: '“' '”' '‘' '’'; }

q:before {
  content: open-quote; }

q:after {
  content: close-quote; }

pre,
code,
kbd {
  background-color: #f0f0f0;
  font-family: Menlo, Monaco, monospace;
  margin: 0;
  padding-left: 0.25em;
  padding-right: 0.25em; }

code,
kbd {
  font-size: 0.8em; }

ol,
ul,
dl {
  margin-bottom: 1.58824em;
  margin-left: 0;
  margin-top: 0;
  padding-bottom: 0;
  padding-left: 1.58824em;
  padding-top: 0; }

ul ul,
ol ol,
dl dl {
  margin-bottom: 0; }

ul {
  list-style: disc; }

ol {
  list-style: decimal; }

dt {
  font-weight: bold; }

abbr {
  font-variant: small-caps;
  font-weight: normal;
  text-transform: lowercase; }

abbr[title]:hover {
  cursor: help; }

mark {
  background: #ffffbf; }

hr {
  border-top-width: 1px;
  padding-top: 1.52941em;
  border: 0;
  border-top: 1px;
  border-top-color: #bdbdbd;
  border-top-style: solid;
  margin-bottom: 0;
  margin-top: 2.11765em; }

table {
  font-family: "Arimo", Arial, sans-serif;
  margin-bottom: 3.17647em;
  margin-top: 3.17647em;
  max-width: 100%;
  overflow: scroll;
  width: 100%; }

table + figcaption {
  margin-bottom: 3.97059em;
  margin-top: -3.30882em; }

tr {
  border-bottom: 1px solid #bdbdbd;
  display: block; }
  @media (min-width: 740px) {
    tr {
      display: table-row; } }

th {
  display: none; }
  @media (min-width: 740px) {
    th {
      display: table-cell; } }

td {
  display: block; }
  td:before {
    content: attr(data-th) ": ";
    font-weight: bold;
    padding-right: 9px; }
  @media (min-width: 740px) {
    td {
      display: table-cell; }
      td:before {
        display: none; } }

th,
td {
  padding: 9px;
  text-align: left; }

form p {
  margin-bottom: 0; }

[type='email'],
[type='number'],
[type='search'],
[type='text'],
[type='tel'],
[type='url'],
[type='password'],
[type='date'],
[type='month'],
[type='week'],
[type='time'],
[type='datetime'],
[type='datetime-local'],
textarea,
select {
  background-color: #fff;
  border: 1px solid #737373;
  /* The 6px vertically centers text on FF, ignored by Webkit */
  box-shadow: none;
  box-sizing: border-box;
  font-family: "Arimo", Arial, sans-serif;
  font-weight: 400;
  height: 36px;
  padding: 6px 9px;
  vertical-align: middle; }

/* Removes awkward default styles on some inputs for iOS */
[type='email'],
[type='number'],
[type='search'],
[type='text'],
[type='tel'],
[type='url'],
[type='password'],
textarea {
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none; }

textarea {
  min-height: 81px;
  padding-bottom: 9px;
  padding-top: 9px; }

[type='email']:focus,
[type='number']:focus,
[type='search']:focus,
[type='text']:focus,
[type='tel']:focus,
[type='url']:focus,
[type='password']:focus,
[type='date']:focus,
[type='month']:focus,
[type='week']:focus,
[type='time']:focus,
[type='datetime']:focus,
[type='datetime-local']:focus,
textarea:focus,
select:focus {
  border: 1px solid #74add1;
  outline: 0; }

.button,
button,
[type='submit'],
[type='reset'],
[type='button'] {
  background-color: transparent;
  border: 1px solid #bdbdbd;
  cursor: pointer;
  display: inline-block;
  font-family: "Arimo", Arial, sans-serif;
  font-size: 17px;
  font-weight: normal;
  height: 36px;
  line-height: 36px;
  padding: 0 18px;
  text-align: center;
  text-decoration: none;
  white-space: nowrap; }

.button:hover,
button:hover,
[type='submit']:hover,
[type='reset']:hover,
[type='button']:hover,
.button:focus,
button:focus,
[type='submit']:focus,
[type='reset']:focus,
[type='button']:focus {
  border-color: #74add1;
  outline: 0; }

label,
legend {
  font-size: 0.8em;
  line-height: 1.98529;
  color: #737373;
  display: block;
  font-family: "Arimo", Arial, sans-serif;
  font-weight: 400; }

legend {
  margin-bottom: 0.66176em; }

fieldset {
  border-width: 0;
  padding: 0; }

[type='checkbox'],
[type='radio'] {
  display: inline; }

[type='file'] {
  padding-left: 0;
  padding-right: 0; }

.article__body {
  background-color: #fff;
  padding-top: 72px; }
  .article__body p,
  .article__body h1,
  .article__body h2,
  .article__body h3,
  .article__body h4,
  .article__body h5,
  .article__body h6,
  .article__body dl,
  .article__body ul,
  .article__body ol,
  .article__body blockquote,
  .article__body pre {
    margin-left: auto;
    margin-right: auto;
    max-width: 620px;
    padding-left: 18px;
    padding-right: 18px; }
  .article__body blockquote {
    max-width: 656px; }
  .article__body blockquote p {
    padding-left: 0;
    padding-right: 0; }

.article-header {
  color: #fff;
  height: 100vh;
  overflow: hidden;
  position: relative; }

.article-header--1-2 {
  height: 50vh; }

.article-header--3-4 {
  height: 75vh; }

.article-header h1 {
  font-size: 1.5625em;
  line-height: 1.35529;
  margin-left: auto;
  margin-right: auto;
  padding-left: 18px;
  padding-right: 18px; }
  @media (min-width: 740px) {
    .article-header h1 {
      font-size: 3.05176em;
      line-height: 1.38782;
      margin-bottom: 0.17348em; } }

.article-header__intro {
  margin-top: -108px;
  padding-left: 18px;
  padding-right: 18px;
  position: absolute;
  text-align: center;
  top: 50%;
  width: 100%; }

.article-header__bg {
  left: 50%;
  min-height: 100%;
  min-width: 100%;
  position: absolute;
  top: 0;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  z-index: -1; }

/*!
Animate.css - http://daneden.me/animate
Licensed under the MIT license - http://opensource.org/licenses/MIT
Copyright (c) 2015 Daniel Eden
*/
.animated {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both; }

.animated.infinite {
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite; }

.animated[data-animated^='fade'] {
  opacity: 0; }

@-webkit-keyframes fadeInLeft {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0); }
  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none; } }

@keyframes fadeInLeft {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0); }
  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none; } }

.fade--in-left {
  -webkit-animation-name: fadeInLeft;
  animation-name: fadeInLeft; }

@-webkit-keyframes fadeInRight {
  from {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0); }
  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none; } }

@keyframes fadeInRight {
  from {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0); }
  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none; } }

.fade--in-right {
  -webkit-animation-name: fadeInRight;
  animation-name: fadeInRight; }

.caption {
  max-width: 620px; }

.chart {
  font-family: "Arimo", Arial, sans-serif; }
  .layout--bleed .chart,
  .layout--full .chart {
    margin-bottom: 3.17647em;
    margin-top: 3.17647em; }

.chart__tooltip {
  font-size: 0.8em;
  line-height: 1.32353;
  background-color: #fff;
  padding: 3px;
  position: absolute;
  text-align: center;
  z-index: 1; }

.credits {
  text-align: center; }

.credits__heading {
  font-size: 0.8em;
  line-height: 1.98529;
  margin-bottom: 1.32353em; }

.credits__person {
  margin-bottom: 0.52941em; }

.credits__responsibility {
  color: #737373;
  font-family: "Arimo", Arial, sans-serif;
  font-size: 0.8em; }

.byline {
  font-family: "Arimo", Arial, sans-serif;
  margin-left: auto;
  margin-right: auto;
  max-width: 656px; }

.dek {
  font-size: 1em;
  line-height: 1.58824;
  font-style: italic;
  margin-bottom: 0.52941em;
  margin-left: auto;
  margin-right: auto;
  max-width: 656px; }
  @media (min-width: 740px) {
    .dek {
      font-size: 1.5625em;
      line-height: 1.35529;
      margin-bottom: 0.67765em; } }

.dateline {
  font-family: "Merriweather", Georgia, "Times New Roman", serif;
  font-size: 0.8em;
  font-variant: small-caps; }

.dropcap {
  display: block;
  float: left;
  font-size: 9.5em;
  font-weight: 900;
  line-height: 0.7;
  margin-top: 0.08em;
  margin-right: 9px; }

.lazyload,
.lazyloading {
  opacity: 0; }

.lazyloaded {
  opacity: 1;
  transition: opacity 300ms; }

.media {
  margin-bottom: 1.58824em; }

.media img {
  display: block;
  max-width: 100%; }

.media--diptic img,
.media--diptic video,
.media--diptic figure {
  margin-bottom: 9px; }
  @media (min-width: 620px) {
    .media--diptic img,
    .media--diptic video,
    .media--diptic figure {
      float: left;
      width: 50%; }
      .media--diptic img:nth-of-type(2n),
      .media--diptic video:nth-of-type(2n),
      .media--diptic figure:nth-of-type(2n) {
        padding-left: 9px; }
      .media--diptic img:nth-of-type(1),
      .media--diptic video:nth-of-type(1),
      .media--diptic figure:nth-of-type(1) {
        padding-right: 9px; } }

.media--video-embed {
  width: 100%; }
  .media--video-embed.vjs-fullscreen {
    padding: 0; }

.progress {
  background-color: #737373;
  height: 5px;
  left: 0;
  overflow: hidden;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 3; }

.progress__bar {
  background-color: #f0f0f0;
  height: 5px;
  opacity: 0;
  transition: opacity 1s;
  width: 0; }

.pullquote {
  font-size: 1.5625em;
  line-height: 1.35529;
  font-weight: 900; }
  .pullquote q {
    display: block;
    margin-bottom: 0.67765em; }
  @media (min-width: 620px) {
    .pullquote {
      margin-bottom: 1.01647em; } }

.pullquote q:before {
  margin-left: -9px; }

.share {
  list-style: none;
  margin-bottom: 0;
  padding: 0; }

.share li {
  display: inline-block;
  margin-left: 6px; }
  .share li a {
    display: block;
    line-height: 40px; }

.share svg {
  height: 18px;
  vertical-align: middle;
  width: 18px; }

.site-header {
  background-color: #fff;
  color: #252525;
  left: 0;
  margin-top: 5px;
  min-height: 40px;
  position: fixed;
  top: 0;
  transition: top 0.2s ease-in-out;
  width: 100%;
  z-index: 2; }
  .site-header a {
    display: block; }
  .site-header a,
  .site-header a:link,
  .site-header a:visited,
  .site-header svg {
    color: #252525;
    fill: #252525; }
  .site-header a:hover,
  .site-header a:active,
  .site-header a:hover svg,
  .site-header a:active svg {
    color: #7e7e7e;
    fill: #7e7e7e;
    text-decoration: none; }

.site-header.is-top {
  box-shadow: 0 1px 10px 0 rgba(0, 0, 0, 0.3); }

.site-header.is-up {
  top: -45px; }

.site-logo {
  font-size: 24px;
  font-weight: 900;
  line-height: 40px;
  margin-right: 9px; }

.site-title {
  display: none;
  font-family: "Arimo", Arial, sans-serif;
  line-height: 40px;
  margin-right: 18px; }
  @media (min-width: 740px) {
    .site-title {
      display: block; } }

.site-top {
  display: none;
  line-height: 40px; }
  .site-top a {
    display: block;
    line-height: 40px; }
  .site-top svg {
    height: 18px;
    vertical-align: middle;
    width: 18px; }
  @media (min-width: 740px) {
    .site-top {
      margin-right: 18px; } }
  @media (min-width: 740px) {
    .is-top .site-top {
      display: block; } }

.layout--bleed .slick-slider,
.layout--full .slick-slider {
  margin-bottom: 3.17647em;
  margin-top: 3.17647em; }

.slick-arrow {
  background: transparent;
  border: 0;
  display: block;
  font-size: 0;
  height: 18px;
  line-height: 0;
  margin-top: -9px;
  outline: none;
  position: absolute;
  top: 50%;
  z-index: 1; }
  .slick-arrow:before {
    font-size: 17px;
    line-height: 18px;
    position: absolute;
    top: 0; }

.slick-next {
  right: 18px; }
  .slick-next:before {
    content: '›'; }

.slick-prev {
  left: 18px; }
  .slick-prev:before {
    content: '‹'; }

.slick-slider img {
  height: auto;
  max-width: 100%; }

.slick-dots {
  list-style: none;
  padding: 0;
  text-align: center; }

.slick-dots li {
  cursor: pointer;
  display: inline-block;
  height: 18px;
  margin: 0 5px;
  position: relative;
  width: 18px; }

.slick-dots button {
  background: transparent;
  border: 0;
  color: transparent;
  cursor: pointer;
  display: block;
  font-size: 0;
  height: 18px;
  line-height: 0;
  outline: none;
  padding: 5px;
  position: absolute;
  width: 18px; }
  .slick-dots button:before {
    color: #bdbdbd;
    content: '•';
    font-size: 17px;
    font-weight: 900;
    height: 18px;
    left: 0;
    line-height: 18px;
    position: absolute;
    top: 0;
    width: 18px; }

.slick-active button:before {
  color: #252525; }

.tombstone:after {
  content: '\25c6'; }

/*
  Player Skin Designer for Video.js
  http://videojs.com

  To customize the player skin edit
  the CSS below. Click "details"
  below to add comments or questions.
  This file uses some SCSS. Learn more
  at http://sass-lang.com/guide)

  This designer can be linked to at:
  http://codepen.io/heff/pen/EarCt/left/?editors=010
*/
.video-js {
  font-size: 10px;
  color: #fff; }

.vjs-default-skin .vjs-big-play-button {
  font-size: 5em;
  line-height: 1.125em;
  height: 1.125em;
  width: 1.875em;
  border: 1px solid #fff;
  border-radius: 0;
  left: 18px;
  bottom: 18px;
  top: auto; }

.video-js:hover .vjs-big-play-button,
.video-js .vjs-big-play-button:focus {
  background-color: #000;
  background-color: rgba(84, 84, 84, 0.8); }

.video-js .vjs-control-bar,
.video-js .vjs-big-play-button,
.video-js .vjs-menu-button .vjs-menu-content {
  background-color: #000;
  background-color: rgba(0, 0, 0, 0.7); }

.video-js .vjs-slider {
  background-color: #545454;
  background-color: rgba(84, 84, 84, 0.5); }

.video-js .vjs-volume-level,
.video-js .vjs-play-progress,
.video-js .vjs-slider-bar {
  background-color: #fff; }

.video-js .vjs-load-progress {
  background-color: #949494;
  background-color: rgba(84, 84, 84, 0.5); }

.video-js .vjs-load-progress div {
  background-color: #d4d4d4;
  background-color: rgba(84, 84, 84, 0.75); }

.vjs-youtube > div:first-child {
  position: static !important; }

img[data-action="zoom"] {
  cursor: pointer;
  cursor: -webkit-zoom-in;
  cursor: -moz-zoom-in; }

.zoom-img,
.zoom-img-wrap {
  position: relative;
  z-index: 666;
  transition: all 300ms; }

img.zoom-img {
  cursor: pointer;
  cursor: -webkit-zoom-out;
  cursor: -moz-zoom-out; }

.zoom-overlay {
  z-index: 420;
  background: #fff;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  filter: "alpha(opacity=0)";
  opacity: 0;
  transition: opacity 300ms; }

.zoom-overlay-open .zoom-overlay {
  filter: "alpha(opacity=100)";
  opacity: 1; }

.zoom-overlay-open,
.zoom-overlay-transitioning {
  cursor: default; }

.column--1x figcaption,
.column--2x figcaption,
.column--bleed figcaption {
  padding-left: 18px;
  padding-right: 18px; }

.column--bleed img {
  max-width: none;
  width: 100%; }

.column--1x {
  max-width: 620px; }

.column--2x {
  max-width: 1240px; }

@media (min-width: 620px) {
  .column--half {
    width: 50%; } }

.column--half figure,
.column--half aside {
  margin-left: 18px;
  margin-right: 18px; }
  @media (min-width: 620px) {
    .column--half figure,
    .column--half aside {
      max-width: 292px; } }

.gutter--bleed {
  max-width: none;
  width: 100%; }
  .gutter--bleed img {
    max-width: none;
    width: 100%; }
  .gutter--bleed figcaption {
    padding-left: 18px;
    padding-right: 18px; }

.gutter--horizontal {
  padding-left: 18px;
  padding-right: 18px; }

.gutter--horizontal-2x {
  padding-left: 36px;
  padding-right: 36px; }

.gutter--vertical {
  margin-top: 1.58824em;
  margin-bottom: 1.58824em; }

.gutter--vertical-2x {
  margin-top: 3.17647em;
  margin-bottom: 3.17647em; }

.hang {
  margin: 0 auto;
  margin-left: 18px;
  margin-right: 18px;
  max-width: 1276px; }
  .hang figure,
  .hang aside {
    max-width: 310px; }

.hang--left {
  float: left; }

.hang--right {
  float: right; }

.set--center {
  margin-left: auto;
  margin-right: auto; }

.set--left {
  float: left; }
  .set--left figure,
  .set--left aside {
    float: right; }

.set--right {
  float: right; }

@media (min-width: 740px) {
  .viewport {
    -webkit-align-items: center;
        -ms-flex-align: center;
                -ms-grid-row-align: center;
            align-items: center;
    -webkit-flex-direction: column;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-flex-direction: row;
        -ms-flex-direction: row;
            flex-direction: row;
    -webkit-justify-content: center;
        -ms-flex-pack: center;
            justify-content: center;
    position: relative; } }
  @media (min-width: 740px) and (min-height: 720px) {
    .viewport {
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex; } }

@media (min-width: 740px) and (min-height: 720px) {
  .viewport--vert-full {
    height: 100vh; } }

@media (min-width: 740px) {
  .viewpoert--hori-full {
    width: 100vw; }
  .viewport--baseline {
    -webkit-align-items: baseline;
        -ms-flex-align: baseline;
                -ms-grid-row-align: baseline;
            align-items: baseline; }
  .viewport--start {
    -webkit-align-items: flex-start;
        -ms-flex-align: start;
                -ms-grid-row-align: flex-start;
            align-items: flex-start; } }

.is-block {
  display: block; }

.is-inline-block {
  display: inline-block; }

.is-flex {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.is-hidden {
  display: none; }

.is-fixed {
  position: fixed; }

/*# sourceMappingURL=data:application/json;base64, */
